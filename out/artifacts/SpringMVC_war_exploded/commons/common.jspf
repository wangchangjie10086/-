<%--<%@ page pageEncoding="UTF-8" %>--%>
<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>

<c:set var="ctx" value="${pageContext.request.contextPath}" />

<%
    ResourceBundle resource = ResourceBundle.getBundle("common");
%>
<link rel="stylesheet" href="${ctx}/css/select2.min.css?v=${staticVersion}">
<link rel="stylesheet" href="${ctx}/css/base.css?v=${staticVersion}">
<link rel="stylesheet" href="${ctx}/css/main.css?v=${staticVersion}">
<link rel="shortcut icon" href="${ctx}/img/favicon.ico" type="image/x-icon" />
<style>    .input-timer{        width: 150px;}</style>
<script src="${ctx}/js/lib/jquery-1.11.3.min.js"></script>
<script src="${ctx}/js/lib/lodash.js"></script>
<script src="${ctx}/js/lib/layer/layer.js"></script>
<script src="${ctx}/js/lib/select2.full.min.js"></script>
<script src="${ctx}/js/lib/calc.min.js"></script>
<script src="${ctx}/js/manage.js?v=${staticVersion}"></script>
<script src="${ctx}/js/commons/global_ajaxsetup.js"></script>
<script src="${ctx}/js/commons/strUtils.js?v=${staticVersion}"></script>
<script src="${ctx}/js/commons/exportExcelCommon.js?v=${staticVersion}"></script>
<script type="text/javascript">
    var scanCodeBuyUrl = '<%=resource.getString("scan_code_buy")%>';
    var ctx = "${ctx}/";
    var cityCinemaMap = {};
    var cittCinemaCodesMap={};
    var INTEGER_MAX_VALUE=2147483647;
    // 对Date的扩展，将 Date 转化为指定格式的String
    // 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，
    // 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)
    // 例子：
    // (new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423
    // (new Date()).Format("yyyy-M-d h:m:s.S")      ==> 2006-7-2 8:9:4.18
    Date.prototype.sformat = function (fmt) { //author: meizz
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    };

    var ValidUtils = {
        validMoney: function (money) {
            return /(^[1-9][0-9]*(\.[0-9]{1,2})?$)|(^0.[0-9]{1,2}$)/.test(money)&& parseInt(money*100)>0;
        },
        validMoney1: function (money) {
            return /(^[1-9][0-9]*(\.[0-9]{1,2})?$)|(^0.[0-9]{1,2}$)|(^[0-9]{1,2}$)/.test(money);
        },
        validMoney3: function (money) {
            return /(^[0-5]$)/.test(money);
        },
        validMoney2: function (money) {
            return /(^-?[1-9][0-9]*(\.[0-9]{1,2})?$)|(^-?0.[0-9]{1,2}$)/.test(money)&& parseInt(money*100)>0;
        },
        validMoney4: function (money) {
            return /(^[0-9][0-9]*(\.[0-9]{1,2})?$)|(^0.[0-9]{1,2}$)/.test(money)&& parseInt(money*100)>=0;
        },
        validDiscount: function (discount) {
            return /(^[1-9](\.[0-9])?$)|^10$|^0.[0-9]$/.test(discount);
        },
        validNum: function (num, maxLength) {
            var regStr;
            if(arguments.length === 1) {
                regStr = "(^[1-9]([0-9]){0,10}$)|(^0$)"
            } else if(arguments.length === 2) {
                regStr = "(^[1-9]([0-9]){0,"+(maxLength-1)+"}$)|(^0$)"
            } else {
                return false;
            }
            var regx = new RegExp(regStr);
            return regx.test(num);
        },
        validText: function (text, minLength, maxLength) {
            var regStr;
            if(arguments.length === 1) {
                regStr = "^[~_*%#!！.。：，,\\-\\(\\)\\（\\）\\w\\u4E00-\\u9FA5]*$";
            } else if(arguments.length === 3) {
                regStr = "^[~_*%#!！.。：，,\\-\\(\\)\\（\\）\\w\u4E00-\u9FA5]{"+minLength+","+maxLength+"}$";
            } else {
                return false;
            }
            var regx = new RegExp(regStr);
            return regx.test(text);
        },
        validUserName: function (text, minLength, maxLength) {
            var regStr;
            if(arguments.length === 1) {
                regStr = "^[a-zA-Z0-9]*$";
            } else if(arguments.length === 3) {
                regStr = "^[a-zA-Z0-9]{"+minLength+","+maxLength+"}$";
            } else {
                return false;
            }
            var regx = new RegExp(regStr);
            return regx.test(text);
        },
        validEmail: function (text, minLength, maxLength) {
            return /^([.a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(text);
        },
        validNameSpcechar:function () {
            return new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]") ;
        },
        validPassWord:function(password){
            return new RegExp("^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,}$").test(password);
        }
    };

    // 禁用日期框浏览器缓存
    try{
        window.onload=function (){
            var inputs = document.getElementsByTagName('input');
            for(var i=0; i<inputs.length; i++) {
                if(inputs[i].type == 'text' && inputs[i].className.indexOf("timer") >= 0) {
                    inputs[i].setAttribute("autocomplete", 'off');
                }
            }
        }
    }catch(e){}

    /**
     * 页面不满一屏时 自动补齐白色区域
     * @param obj jQuery对象
     * @param h 传入高度
     */
    function fullScreen(obj, diffH) {
        var fullWhite = $('body').height() - diffH;
        obj.css('min-height', fullWhite);
    }

    // 屏幕发生改变时 重新加载方法
    $(window).on('resize',function () {
        fullScreen($('.full-white'), 42);
    });

    /*
    try {
        /!**
         * 页面不满一屏时 自动补齐白色区域
         * @param obj jQuery对象
         * @param h 传入高度
         *!/
        function fullScreen(obj, diffH) {
            var fullWhite = $('body').height() - diffH;
            obj.css('min-height', fullWhite);
        }

        var fulls = setInterval(function () {
            if($(".bgc-ff").length == 0){
                $(".bgc-ff").addClass('full-white');
                // 占满一屏
                fullScreen($('.full-white'), 40);
                clearInterval(fulls);
            }
            if($(".bgc-ff").length > 1){
                clearInterval(fulls);
            }
        }, 500);
    } catch (e) {
    }
    */
    function loadCity() {
        $.ajax({
            url: ctx + "cinema/getcitycinema.do",
            type: "GET",
            cache: false,
            async: false,
            dataType: 'json',
            success: function (data) {
                if (data && data.resultCode === '0') {
                    cityCinemaMap = data.resultData.citycodeCinemaMap;
                    var cityArr = data.resultData.cityList;
                    // 城市列表
                    $("#citySel").select2({placeholder: '全国'});
                    $("#citySel").append("<option value='-1'>全国</option>");
                    $(cityArr).each(function (idx, city) {
                        $("#citySel").append("<option value='" + city.cityCode + "'>" + city.cityName + "</option>");
                        var cincodes=[];
                        $(cityCinemaMap[city.cityCode ]).each(function (idx,cinemas) {
                            cincodes.push(cinemas.cinemaCode);
                        })
                        cittCinemaCodesMap[city.cityCode]=cincodes.join(",");
                    });

                    $("#citySel").change(function () {
                        $("#cinemaSel").select2({placeholder: '请选择影院, 可多选', multiple: true});
                        $("#cinemaSel").empty();
                        if($("#citySel").val() == -1) {
                            $(_.values(cityCinemaMap)).each(function (idx, cinemas) {

                                $(cinemas).each(function (idxtmp, cinema) {

                                    $("#cinemaSel").append("<option value='" + cinema.cinemaCode + "'>" + cinema.cinemaShortName + "</option>");
                                });
                                // cittCinemaCodesMap[cityCinemaMap.]=cincodes;
                            });
                        } else {
                            $(cityCinemaMap[$("#citySel").val()]).each(function (idx, cinema) {
                                $("#cinemaSel").append("<option value='" + cinema.cinemaCode + "'>" + cinema.cinemaShortName + "</option>");
                            });
                        }
                    });

                    getSS();
                    if(!$("#statusSel").val()) {
                        $("#statusSel").val("-1");
                    }
                    if(sessionStorage.getItem(ss_prefix + "_citySel") && sessionStorage.getItem(ss_prefix + "_citySel") !== "null"){
                        var cinemas = sessionStorage.getItem(ss_prefix + "_citySel").split(",");
                        //$("#cinemaCode").select2('val', [11062001,11061501]).trigger('change');
                        $("#citySel").val(cinemas);
                    } else {
                        $("#citySel").val("-1");
                    }
                    $("#citySel").trigger('change');
                    if(sessionStorage.getItem(ss_prefix + "_cinemaSel") && sessionStorage.getItem(ss_prefix + "_cinemaSel1") !== "null"){
                        var cinemas = sessionStorage.getItem(ss_prefix + "_cinemaSel").split(",");
                        //$("#cinemaCode").select2('val', [11062001,11061501]).trigger('change');
                        $("#cinemaSel").val(cinemas);
                    }

                } else {
                    if (data.resultDesc) {
                        layer.msg(data.resultDesc);
                    } else {
                        layer.msg('查询失败 !');
                    }
                }
            },
            error: function () {
                layer.msg('查询失败 !');
            }
        });
    }

    $(function () {
        if($(".introbtn")) {
            try {
                $(".introbtn").click(function () {
                    var pval = $(this).data("pval");
                    var ptitle = $(this).data("ptitle");
                    var pcontent = [];
                    if(pval.indexOf(",") > -1) {
                        var tArr = [];
                        if(ptitle){
                            tArr = ptitle.split(",");
                        }
                        $(pval.split(",")).each(function (idx, elem) {
                            pcontent .push(
                                {
                                    title: (_.isUndefined(tArr[idx]) ? "" : tArr[idx]) + "功能介绍",
                                    content: '<div><img src="${ctx}/img/explain/'+ elem +'.jpg"/></div>'
                                }
                            );
                        });
                    } else {
                        pcontent .push(
                            {
                                title: (ptitle ? ptitle : "") + "功能介绍",
                                content: '<div><img src="${ctx}/img/explain/'+ pval +'.jpg"/></div>'
                            }
                        );
                    }
                    layer.tab({
                        // type: 1,
                        maxmin: true,
                        shade: [0.7],
                        area: ['1150px', '600px'],
                        shadeClose: true,
                        // content: pcontent
                        tab: pcontent,
                        success: function(layero){
                            layero.find('.layui-layer-min').remove();
                        }
                    });
                });
            } catch (e) {
            }
        }
    });


    //适用于从分页跳转到其他页面
    function setPagingKeepClickBtn(v) {
        console.log("保持=true;不保持=false;是否保持分页(点击某页面某按钮后数据列表页还保持上次页码和数据)="+v);
        var referrer = document.referrer.split("://")[1];
        console.log("referrer:"+referrer);
        if(!v){
            sessionStorage.setItem( referrer+"_pageNumber", "");//清理分页缓存页码
        };
        sessionStorage.removeItem(referrer+"_isReload");

    };

    function clearNoNum(obj) {
        obj.value = obj.value.replace(/[^\d.]/g, "");//清除"数字"和"."以外的字符
        obj.value = obj.value.replace(/^\./g, "");//验证第一个字符是数字而不是字符
        obj.value = obj.value.replace(/\.{2,}/g, ".");//只保留第一个.清除多余的
        obj.value = obj.value.replace(".", "$#$").replace(/\./g, "").replace("$#$", ".");
        obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3');//只能输入两个小数
    }

</script>
<script id="odTmpl" type="text/x-jrender">
<div class="modality-box">
    <div class="modality-title clearfix">
        <span class="fl layer-title">取货号({{:waitNo}})</span>
        <span class="fr layer-close cursor close-layer close-btn"></span>
    </div>
    <div class="line-2px"></div>
    <div class="p20">
        <div>
            <span>影核单号:</span>
            <span>{{:orderCode}}</span>
            <span class="ml20">手机号码:</span>
            <span>{{:memberPhone}}</span>
            <span class="ml20">{{if type==5}}取餐{{else}}送餐{{/if}}时间:</span>
            <span>{{dateTime:sendTime}}</span>
        </div>
        <div class="mt20">
            <span>订餐影城:</span>
            <span>{{:cinemaName}}</span>
            <span class="ml20">取货码:</span>
            <span>{{:pickupCodeGoods}}</span>
        </div>
        <div class="line-1px mt20"></div>
        <div class="clearfix mt20 detail-goods">
            <div class="fl has-br pr20">
                <div class="fw f14 mb10">商品明细</div>
                {{for details}}
                <p>{{:sellName}}<span style="margin:0px 15px;">{{formatCurency:posAmount}}</span>{{:sellCount}}</p>
                {{/for}}
            </div>
            <div class="fl ml20">
                <div class="fw f14 mb10">客人备注:</div>
                <p>{{:remarks}}</p>
            </div>
        </div>
        <div class="line-1px mt20"></div>
        {{if type==4}}
        <div class="detail-goods mt20">
            <div class="fw f14 mb10">送餐位置</div>
            <p>{{:sendAddress}}</p>
        </div>
        <div class="line-1px mt20"></div>
        {{/if}}
        <div class="detail-goods mt20">
            <div class="fw f14 mb10">操作记录</div>
            <p>{{dateTime:createTime}} {{:createOrderChannel}}提交订单</p>
            <p>{{dateTime:payTime}} {{:payChannel}}支付订单完成，支付金额 ¥{{formatCurency:orderTotalPayAmount}}</p>
        </div>
        <div class="tc mt10">
            {{if type==5 && deliveryStatus == 2}}
            <input type="button" class="blue_btn blue_btn30 mt20 mb10 orderFinish" attr="{{:cinemaCode}},{{:orderCode}},{{:memberId}}" value="订单完成">
            {{else type==4 && (deliveryStatus==2 || deliveryStatus==4)}}
                {{if deliveryStatus==2}}
                <input type="button" class="blue_btn blue_btn30 mt20 mb10 deliverying" attr="{{:cinemaCode}},{{:orderCode}},{{:memberId}}" value="送货">
                {{else}}
                <input type="button" class="blue_btn blue_btn30 mt20 mb10 orderFinish" attr="{{:cinemaCode}},{{:orderCode}},{{:memberId}}" value="订单完成">
                {{/if}}
            {{/if}}
            <input type="button" class="gray_btn gray-btn30 ml20 cancel close-btn" value="关闭">
        </div>
    </div>
</div>
</script>
<style type="text/css">
    .m-pagination-size {
        display: none !important;
    }
    .layui-layer-btn.layui-layer-btn- {
        text-align: center;
    }
</style>

<%-- 百度统计 start --%>
<script>
    var _hmt = _hmt || [];
    (function() {
        var hm = document.createElement("script");
        hm.src = "https://hm.baidu.com/hm.js?785189d650d56c3598bbdb17c057f717";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>
<%-- 百度统计 end --%>
<script>
    $(document).ready(function() {
        var page_title = $('.page_title').html();
        console.log('page_title: ' + page_title);
        console.log('top_page_title: ' + $(window.parent.document).find('#top_page_title').html());
        if (page_title) {
            $(window.parent.document).find('#top_page_title').html(page_title);
        } else {
            $(window.parent.document).find('#top_page_title').html('影核云会员管理平台');
        }
    });
</script>
